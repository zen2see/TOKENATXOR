/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { VrfFacet, VrfFacetInterface } from "../VrfFacet";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256[]",
        name: "_tokenIds",
        type: "uint256[]",
      },
    ],
    name: "OpenProductions",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ProductionOpened",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "randomNumber",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_vrfTimeSet",
        type: "uint256",
      },
    ],
    name: "VrfRandomNumber",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_newFee",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "_keyHash",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "_vrfCoordinator",
        type: "address",
      },
      {
        internalType: "address",
        name: "_link",
        type: "address",
      },
    ],
    name: "changeVrf",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "keyHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "link",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "linkBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "linkBalance_",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "_tokenIds",
        type: "uint256[]",
      },
    ],
    name: "openProducions",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_requestId",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "_randomNumber",
        type: "uint256",
      },
    ],
    name: "rawFulfillRandomness",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
    ],
    name: "removeLinkTokens",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "vrfCoordinator",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506115cc806100206000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c806394985ddd1161005b57806394985ddd146100f9578063a3e56fa81461010c578063c26ecefa1461012a578063e59c2f0c1461013257610088565b80631c4695f41461008d5780634bac917d146100bf57806361728f39146100d4578063761e99f0146100e6575b600080fd5b610095610145565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020015b60405180910390f35b6100d26100cd366004611364565b610162565b005b6025545b6040519081526020016100b6565b6100d26100f436600461133b565b610461565b6100d26101073660046113fa565b61051a565b60275473ffffffffffffffffffffffffffffffffffffffff16610095565b6100d861071e565b6100d2610140366004611433565b6107c5565b60285473ffffffffffffffffffffffffffffffffffffffff165b90565b600061016c6108d8565b905060005b828110156104225760008484838181106101b4577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b602090810292909201356000818152600d9093526040909220600b01549192505074010000000000000000000000000000000000000000900460ff1615610282576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602960248201527f546f6b656e6174786f7246616365743a2050726f64756374696f6e206973206e60448201527f6f7420636c6f736564000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b6000818152600d60205260409020600b015473ffffffffffffffffffffffffffffffffffffffff84811691161461033b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603860248201527f546f6b656e6174786f7246616365743a204f6e6c7920746f6b656e6174786f7260448201527f206f776e65722063616e206f70656e206120706f7274616c00000000000000006064820152608401610279565b6000818152600d60205260409020600b01547a010000000000000000000000000000000000000000000000000000900460ff16156103fb576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603460248201527f546f6b656e6174786f7246616365743a2043616e2774206f70656e20706f727460448201527f616c207768656e206974206973206c6f636b65640000000000000000000000006064820152608401610279565b61040481610941565b61040f308285610cbb565b508061041a81611561565b915050610171565b507ff06a7591053d99ccd138b3a5f477d3e7d1047d25ba168d21cddeec5d77e82619838360405161045492919061150e565b60405180910390a1505050565b610469610d0e565b6028546040517fa9059cbb00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8481166004830152602482018490529091169063a9059cbb90604401602060405180830381600087803b1580156104dd57600080fd5b505af11580156104f1573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061051591906113d3565b505050565b60008281526023602052604090205460275473ffffffffffffffffffffffffffffffffffffffff1661054a6108d8565b73ffffffffffffffffffffffffffffffffffffffff16146105c7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f4f6e6c7920565246436f6f7264696e61746f722063616e2066756c66696c6c006044820152606401610279565b6000818152600d60205260409020600b015474010000000000000000000000000000000000000000900460ff1660011461065d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601c60248201527f56726646616365743a20565246206973206e6f742070656e64696e67000000006044820152606401610279565b6000818152600d60209081526040808320600b0180547fffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff1674020000000000000000000000000000000000000000179055600c9091528082208490555182917f45118fdfe65b80953fd6f0c11d2acaf69635c757dcdc4c5d62df39907a84232c91a26040805183815242602082015282917f902c3f482303571df54b548cf5ccfab6a428d11d87b142243af064b9fe64e2d4910160405180910390a2505050565b6028546040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015260009173ffffffffffffffffffffffffffffffffffffffff16906370a082319060240160206040518083038186803b15801561078857600080fd5b505afa15801561079c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107c0919061141b565b905090565b6107cd610d0e565b831561080c57602680547fffffffffffffffffffffffffffff000000000000000000000000000000000000166bffffffffffffffffffffffff86161790555b82156108185760258390555b73ffffffffffffffffffffffffffffffffffffffff82161561087557602780547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff84161790555b73ffffffffffffffffffffffffffffffffffffffff8116156108d257602880547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff83161790555b50505050565b60003330141561093c57600080368080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525050505036015173ffffffffffffffffffffffffffffffffffffffff16915061015f9050565b503390565b6000818152600d602052604090819020600b0180547fffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff167401000000000000000000000000000000000000000017905560265460285491517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015271ffffffffffffffffffffffffffffffffffff90911691829173ffffffffffffffffffffffffffffffffffffffff909116906370a082319060240160206040518083038186803b158015610a1557600080fd5b505afa158015610a29573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a4d919061141b565b1015610ab5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601960248201527f56726646616365743a204e6f7420656e6f756768204c494e4b000000000000006044820152606401610279565b602554602854602754604080516020810185905260008183015281518082038301815260608201928390527f4000aea00000000000000000000000000000000000000000000000000000000090925273ffffffffffffffffffffffffffffffffffffffff93841693634000aea093610b3593911691879190606401611478565b602060405180830381600087803b158015610b4f57600080fd5b505af1158015610b63573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b8791906113d3565b610bed576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601e60248201527f56726646616365743a206c696e6b207472616e73666572206661696c656400006044820152606401610279565b60008181526024602081815260408084208054825180850188905280840187905230606082015260808082018390528451808303909101815260a0909101909352825192840192909220868652939092529192610c4983611561565b909155505060408051602080820185905281830184905282518083038401815260608301845280519082012060008181526023835284902088905543608084015260a08084018990528451808503909101815260c09093019093528151910120610cb4908290610df3565b5050505050565b73ffffffffffffffffffffffffffffffffffffffff8381166000908152603960209081526040808320868452825280832093851683529290529081205480610d04575050610515565b610cb48184610e98565b7fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c13205473ffffffffffffffffffffffffffffffffffffffff16610d4e6108d8565b73ffffffffffffffffffffffffffffffffffffffff1614610df1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602260248201527f4c69624469616d6f6e643a204d75737420626520636f6e7472616374206f776e60448201527f65720000000000000000000000000000000000000000000000000000000000006064820152608401610279565b565b600082815260236020908152604080832054808452600d909252909120600b015474010000000000000000000000000000000000000000900460ff1660011461065d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601c60248201527f56726646616365743a20565246206973206e6f742070656e64696e67000000006044820152606401610279565b60008281526034602052604081206001810154610eb6575050611033565b60008481526033830160205260409020600881015460ff16151560011480610ee15750600781015415155b15610eee57505050611033565b600181015473ffffffffffffffffffffffffffffffffffffffff858116911614610f74576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f4d61726b6574706c6163653a206f776e6572206e6f742073656c6c65720000006044820152606401610279565b6008810180547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016600117905560038101546000908152600d8401602052604090819020600b0180547fffffffffff00ffffffffffffffffffffffffffffffffffffffffffffffffffff1690556004820154905186917f10e53bca620314e794d61e37932062e81c48e88233765d09da42aeb00ae4dba09161102191904390918252602082015260400190565b60405180910390a2610cb48585611037565b5050565b60008281526034602052604081206001810154611055575050611033565b8054801561107757600081815260348401602052604090206002808401549101555b600282015480156110975760008181526034850160205260409020835490555b6000868152603385016020908152604080832060048101548452603588019092529182902091517f6c697374656400000000000000000000000000000000000000000000000000008152909188916006019081526020016040518091039020541415611152576002840154600482015460009081526035870160205260409081902090517f6c697374656400000000000000000000000000000000000000000000000000008152600601908152604051908190036020019020555b600060018501819055808555600290940184905586845260368501602052604090932080549093909250821561119c57600083815260368601602052604090206002808601549101555b6002840154915081156111be5760008281526036860160205260409020845490555b506000868152603385016020908152604080832073ffffffffffffffffffffffffffffffffffffffff89168452603788018352818420600482015485529092529182902091517f6c6973746564000000000000000000000000000000000000000000000000000081529091889160060190815260200160405180910390205414156112b957600284015473ffffffffffffffffffffffffffffffffffffffff871660009081526037870160209081526040808320600486015484529091529081902090517f6c697374656400000000000000000000000000000000000000000000000000008152600601908152604051908190036020019020555b600060018501819055808555600285015560048101546040805191825242602083015288917fd309bba073dd463d9d78e92766d06da7cde7d0e6e83149168a7bc913c9ecc442910160405180910390a250505050505050565b803573ffffffffffffffffffffffffffffffffffffffff8116811461133657600080fd5b919050565b6000806040838503121561134d578182fd5b61135683611312565b946020939093013593505050565b60008060208385031215611376578182fd5b823567ffffffffffffffff8082111561138d578384fd5b818501915085601f8301126113a0578384fd5b8135818111156113ae578485fd5b86602080830285010111156113c1578485fd5b60209290920196919550909350505050565b6000602082840312156113e4578081fd5b815180151581146113f3578182fd5b9392505050565b6000806040838503121561140c578182fd5b50508035926020909101359150565b60006020828403121561142c578081fd5b5051919050565b60008060008060808587031215611448578182fd5b843593506020850135925061145f60408601611312565b915061146d60608601611312565b905092959194509250565b600073ffffffffffffffffffffffffffffffffffffffff8516825260208481840152606060408401528351806060850152825b818110156114c7578581018301518582016080015282016114ab565b818111156114d85783608083870101525b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160800195945050505050565b6000602082528260208301527f07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff831115611546578081fd5b60208302808560408501379190910160400190815292915050565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156115b8577f4e487b710000000000000000000000000000000000000000000000000000000081526011600452602481fd5b506001019056fea164736f6c6343000802000a";

export class VrfFacet__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<VrfFacet> {
    return super.deploy(overrides || {}) as Promise<VrfFacet>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): VrfFacet {
    return super.attach(address) as VrfFacet;
  }
  connect(signer: Signer): VrfFacet__factory {
    return super.connect(signer) as VrfFacet__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): VrfFacetInterface {
    return new utils.Interface(_abi) as VrfFacetInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): VrfFacet {
    return new Contract(address, _abi, signerOrProvider) as VrfFacet;
  }
}
